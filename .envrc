#! /bin/bash

##########################################
# DO NOT MAKE LOCAL CHANGES TO THIS FILE #
#                                        #
# Vars in this file can be overridden by #
# exporting them in .envrc.local         #
##########################################

required_vars=()
var_docs=()

# Declare an environment variable as required.
#
#   require VAR_NAME "Documentation about how to define valid values"
require() {
  required_vars+=("$1")
  var_docs+=("$2")
}

# Check all variables declared as required. If any are missing, print a message and
# exit with a non-zero status.
check_required_variables() {
  for i in "${!required_vars[@]}"; do
    var=${required_vars[i]}
    if [[ -z "${!var}" ]]; then
      log_status "${var} is not set: ${var_docs[i]}"
      missing_var=true
    fi
  done

  if [[ $missing_var == "true" ]]; then
    log_error "Your environment is missing some variables!"
    log_error "Set the above variables in .envrc.local and try again."
  fi
}


#########################
# Project Configuration #
#########################

# Login.gov configuration
export LOGIN_GOV_CALLBACK_PROTOCOL="http://"
export LOGIN_GOV_CALLBACK_PORT="3000"
export LOGIN_GOV_MY_CLIENT_ID="urn:gov:gsa:openidconnect.profiles:sp:sso:dod:mymovemillocal"
export LOGIN_GOV_OFFICE_CLIENT_ID="urn:gov:gsa:openidconnect.profiles:sp:sso:dod:officemovemillocal"
export LOGIN_GOV_HOSTNAME="idp.int.identitysandbox.gov"

require LOGIN_GOV_SECRET_KEY "See https://docs.google.com/document/d/148RzqgaQbhOxXd4z_xuj5Jz8JNETThrn7RVFmMqXFvk"

# JSON Web Token (JWT) config
CLIENT_AUTH_SECRET_KEY=$(cat config/devlocal-client_auth_secret.key)
export CLIENT_AUTH_SECRET_KEY

# TLS certificate/key for running local https
HTTPS_CERT=$(cat config/devlocal-https.pem)
HTTPS_KEY=$(cat config/devlocal-https.key)
export HTTPS_CERT HTTPS_KEY

# Prevent user sessions from timing out
export NO_SESSION_TIMEOUT=true

# AWS S3 development access
#
# To use S3 and not the filesystem, you'll need to add the following to
# your .envrc.local:
#
#   export STORAGE_BACKEND=s3
#
# The default and equivalent to not being set is:
#
#   export STORAGE_BACKEND=filesystem
#
# Your AWS credentials should be setup in the transcom-ppp profile. They will be
# detected and used by the app automatically.
export AWS_S3_BUCKET_NAME="transcom-ppp-app-devlocal-us-west-2"
export AWS_S3_REGION="us-west-2"
export AWS_PROFILE=transcom-ppp
export AWS_S3_KEY_NAMESPACE=$USER


# Bing MAPS API
# export BING_MAPS_ENDPOINT="https://dev.virtualearth.net/REST/v1/Routes/Truck"
# require BING_MAPS_KEY "See https://docs.google.com/document/d/16ZomLuR6BPEIK4enfMcqu31oiJYZWNDe9Znyf9e88dg"

# HERE MAPS API
export HERE_MAPS_GEOCODE_ENDPOINT="https://geocoder.cit.api.here.com/6.2/geocode.json"
export HERE_MAPS_ROUTING_ENDPOINT="https://route.cit.api.here.com/routing/7.2/calculateroute.json"
require HERE_MAPS_APP_ID "See https://docs.google.com/document/d/16ZomLuR6BPEIK4enfMcqu31oiJYZWNDe9Znyf9e88dg"
require HERE_MAPS_APP_CODE "See https://docs.google.com/document/d/16ZomLuR6BPEIK4enfMcqu31oiJYZWNDe9Znyf9e88dg"

##############################################
# Load Local Overrides and Check Environment #
##############################################

# Load a local overrides file. Any changes you want to make for your local
# environment should live in that file.

if [ -e .envrc.local ]
then
  source_env .envrc.local
fi

# Check that all required environment variables are set
check_required_variables
